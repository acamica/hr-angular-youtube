{
    "hrMd": {
        "gulpfile.js": {
            "version": "0.0.1",
            "filehash": "02ac475e44650c73343a0392ebc545b1",
            "refs": [
                {
                    "name": false,
                    "src": "gulpfile.js",
                    "ref": {
                        "text": "gulp.task('docs'"
                    },
                    "lineNumber": 6,
                    "refhash": "79d4751c462e2ea35d5868fc56c88d0f",
                    "status": "pending",
                    "directive": "code_warning",
                    "found": true,
                    "snippetHash": "4e297f21ee1f4a4d00d28300f18d5eb7",
                    "char": {
                        "from": 3331,
                        "to": 3400
                    }
                }
            ]
        },
        "src/directive/youtube-player.js": {
            "version": "0.0.1",
            "filehash": "2b2042f39685e2379ac6dea79f547c65",
            "refs": [
                {
                    "name": false,
                    "src": "src/directive/youtube-player.js",
                    "ref": {
                        "text": "return [elm[0].clientWidth"
                    },
                    "lineNumber": 6,
                    "refhash": "536bb2825619f079372960dba93f8741",
                    "status": "pending",
                    "directive": "code_warning",
                    "found": true,
                    "snippetHash": "ecfbd79ff2575b2e0a3fa1f342cebaa6",
                    "char": {
                        "from": 6138,
                        "to": 6197
                    }
                }
            ]
        },
        "src/overlay/playerProgressBar.js": {
            "version": "0.0.1",
            "filehash": "aa0ace36ba09459a8ff5cb6827912b77",
            "refs": [
                {
                    "name": false,
                    "src": "src/overlay/playerProgressBar.js",
                    "ref": {
                        "text": "var getPercentageFromPageX ="
                    },
                    "lineNumber": 6,
                    "refhash": "e459b00d32824367063914e9ea936a5b",
                    "status": "pending",
                    "directive": "code_warning",
                    "found": true,
                    "snippetHash": "e296c487f8e5fc6daa15052c3367d646",
                    "char": {
                        "from": 5443,
                        "to": 5871
                    }
                }
            ]
        },
        "src/overlay/showDirectives.js": {
            "version": "0.0.1",
            "filehash": "c4ac5f8733818760c76f5c3a516dfcbf",
            "refs": [
                {
                    "name": false,
                    "src": "src/overlay/showDirectives.js",
                    "ref": {
                        "text": "showIfFullscreenEnabled"
                    },
                    "lineNumber": 6,
                    "refhash": "cdd68e3c30326f27eda34e1fff2babea",
                    "status": "pending",
                    "directive": "code_warning",
                    "found": true,
                    "snippetHash": "7601458093ff36f41cb673f21d2c1725",
                    "char": {
                        "from": 1673,
                        "to": 1698
                    }
                },
                {
                    "name": false,
                    "src": "src/overlay/showDirectives.js",
                    "ref": {
                        "text": ".directive('showIfMuted'"
                    },
                    "lineNumber": 16,
                    "refhash": "6c8cb5ddd5fa8ed7e1420aafcb9b36e7",
                    "status": "pending",
                    "directive": "code_todo",
                    "found": true,
                    "snippetHash": "b1ff10d9ab2fccb1da97d8979d0b82b3",
                    "char": {
                        "from": 52,
                        "to": 4400
                    }
                }
            ]
        },
        "src/service/youtube-marker.js": {
            "version": "0.0.1",
            "filehash": "acf6e6a76cfee40547240564200587c8",
            "refs": [
                {
                    "name": false,
                    "src": "src/service/youtube-marker.js",
                    "ref": {
                        "text": "if (this.blockFF === true) {"
                    },
                    "lineNumber": 12,
                    "refhash": "e842f0f3bab6caeaa5f0ef475e6fa4e8",
                    "status": "pending",
                    "directive": "code_todo",
                    "found": true,
                    "snippetHash": "98f3d13a8505e583f29377b665bfcd11",
                    "char": {
                        "from": 1451,
                        "to": 1522
                    }
                }
            ]
        },
        "src/service/youtube-player.js": {
            "version": "0.0.1",
            "filehash": "0411648a380460a57ff0b55a9514eedb",
            "refs": [
                {
                    "name": false,
                    "src": "src/service/youtube-player.js",
                    "ref": {
                        "text": "YoutubePlayer.prototype.fullscreenEnabled"
                    },
                    "lineNumber": 4,
                    "refhash": "97476b9fd85463a4d16bbfe49f103420",
                    "status": "pending",
                    "directive": "code_todo",
                    "found": true,
                    "snippetHash": "b870a32d90488833290edb255698d7ac",
                    "char": {
                        "from": 7386,
                        "to": 7427
                    }
                },
                {
                    "name": false,
                    "src": "src/service/youtube-player.js",
                    "ref": {
                        "text": "YoutubePlayer.prototype.isMuted "
                    },
                    "lineNumber": 18,
                    "refhash": "ca3eda8b16fec0f9ac0e95e3e0c1a2fa",
                    "status": "pending",
                    "directive": "code_warning",
                    "found": true,
                    "snippetHash": "753b0692cb7820e966ca6ac1c14df075",
                    "char": {
                        "from": 16127,
                        "to": 16224
                    }
                }
            ]
        }
    },
    "hrCode": {
        "gulpfile.js": {
            "version": "0.0.1",
            "refs": {
                "79d4751c462e2ea35d5868fc56c88d0f": {
                    "loc": [
                        {
                            "file": "docs/gulpfile.js.md",
                            "md": "gulpfile.js",
                            "line": 6
                        }
                    ],
                    "query": {
                        "text": "gulp.task('docs'"
                    },
                    "refhash": "79d4751c462e2ea35d5868fc56c88d0f",
                    "directive": "code_warning",
                    "found": true,
                    "snippet": "gulp.task('docs', function(){\n    return gulp.start('build-docs');\n})",
                    "snippetHash": "4e297f21ee1f4a4d00d28300f18d5eb7",
                    "char": {
                        "from": 3331,
                        "to": 3400
                    }
                }
            },
            "filehash": "dc754654d961fc7042f4e8d80b0c3f8b"
        },
        "src/directive/youtube-player.js": {
            "version": "0.0.1",
            "refs": {
                "536bb2825619f079372960dba93f8741": {
                    "loc": [
                        {
                            "file": "docs/src/directive/youtube-player.js.md",
                            "md": "src/directive/youtube-player.js",
                            "line": 6
                        }
                    ],
                    "query": {
                        "text": "return [elm[0].clientWidth"
                    },
                    "refhash": "536bb2825619f079372960dba93f8741",
                    "directive": "code_warning",
                    "found": true,
                    "snippet": "return [elm[0].clientWidth, elm[0].clientHeight].join('x');",
                    "snippetHash": "ecfbd79ff2575b2e0a3fa1f342cebaa6",
                    "char": {
                        "from": 6138,
                        "to": 6197
                    }
                }
            },
            "filehash": "8737050c67e939b62f72b5fff5f70fcc"
        },
        "src/overlay/playerProgressBar.js": {
            "version": "0.0.1",
            "refs": {
                "e459b00d32824367063914e9ea936a5b": {
                    "loc": [
                        {
                            "file": "docs/src/overlay/playerProgressBar.js.md",
                            "md": "src/overlay/playerProgressBar.js",
                            "line": 6
                        }
                    ],
                    "query": {
                        "text": "var getPercentageFromPageX ="
                    },
                    "refhash": "e459b00d32824367063914e9ea936a5b",
                    "directive": "code_warning",
                    "found": true,
                    "snippet": "var getPercentageFromPageX = function (pagex) {\n                    // Get the player bar x from the page x\n                    var left =  elm[0].getBoundingClientRect().left;\n                    var x = Math.min(Math.max(0,pagex - left),elm[0].clientWidth);\n\n                    // Get the percentage of the bar\n                    var xpercent = x / elm[0].clientWidth;\n                    return xpercent;\n                };",
                    "snippetHash": "e296c487f8e5fc6daa15052c3367d646",
                    "char": {
                        "from": 5443,
                        "to": 5871
                    }
                }
            },
            "filehash": "c42cd2d779ace47b5089d11451e84721"
        },
        "src/overlay/showDirectives.js": {
            "version": "0.0.1",
            "refs": {
                "cdd68e3c30326f27eda34e1fff2babea": {
                    "loc": [
                        {
                            "file": "docs/src/overlay/showDirectives.js.md",
                            "md": "src/overlay/showDirectives.js",
                            "line": 6
                        }
                    ],
                    "query": {
                        "text": "showIfFullscreenEnabled"
                    },
                    "refhash": "cdd68e3c30326f27eda34e1fff2babea",
                    "directive": "code_warning",
                    "found": true,
                    "snippet": "'showIfFullscreenEnabled'",
                    "snippetHash": "7601458093ff36f41cb673f21d2c1725",
                    "char": {
                        "from": 1673,
                        "to": 1698
                    }
                },
                "6c8cb5ddd5fa8ed7e1420aafcb9b36e7": {
                    "loc": [
                        {
                            "file": "docs/src/overlay/showDirectives.js.md",
                            "md": "src/overlay/showDirectives.js",
                            "line": 16
                        }
                    ],
                    "query": {
                        "text": ".directive('showIfMuted'"
                    },
                    "refhash": "6c8cb5ddd5fa8ed7e1420aafcb9b36e7",
                    "directive": "code_todo",
                    "found": true,
                    "snippet": "angular.module('hrAngularYoutube')\n\n    .directive('showIfPlayerIs', ['$animate', function($animate) {\n        return {\n            restrict: 'AE',\n            require: '^youtubePlayer',\n            link: function(scope, elm, attrs,youtubePlayerCtrl) {\n                // By default hide\n                $animate.addClass(elm, 'ng-hide');\n                youtubePlayerCtrl.getPlayer().then(function(player){\n                    // Convert the status list into an array of state numbers\n                    var status = [];\n                    // Convert it first into the array of string\n                    var stringStatus = attrs.showIfPlayerIs.toUpperCase().split(',');\n                    // For each state name, get its state number\n                    angular.forEach(stringStatus,function(s){\n                        if (YT.PlayerState.hasOwnProperty(s)) {\n                            status.push(YT.PlayerState[s]);\n                        }\n                    });\n\n                    var hideOrShow = function (event) {\n                        if (status.indexOf(event.data) !== -1) {\n                            $animate.removeClass(elm, 'ng-hide');\n                        } else {\n                            $animate.addClass(elm, 'ng-hide');\n                        }\n                    };\n                    // Subscribe to the state change event\n                    player.on('onStateChange', hideOrShow);\n                    // Show or hide based on initial status\n                    hideOrShow({data: player.getPlayerState()});\n                });\n            }\n        };\n    }])\n\n    .directive('showIfFullscreenEnabled', ['$animate', function($animate) {\n        return {\n            restrict: 'A',\n            require: '^youtubePlayer',\n            link: function(scope, elm, attrs,youtubePlayerCtrl) {\n                // By default hide\n                $animate.addClass(elm, 'ng-hide');\n                youtubePlayerCtrl.getPlayer().then(function(player){\n                    if (player.fullscreenEnabled()) {\n                        $animate.removeClass(elm, 'ng-hide');\n                    } else {\n                        $animate.addClass(elm, 'ng-hide');\n                    }\n                });\n            }\n        };\n    }])\n    .directive('showIfFullscreen', ['$animate', function($animate) {\n        return {\n            restrict: 'A',\n            require: '^youtubePlayer',\n            link: function(scope, elm, attrs,youtubePlayerCtrl) {\n                // By default hide\n                $animate.addClass(elm, 'ng-hide');\n                youtubePlayerCtrl.getPlayer().then(function(player){\n                    var hideOrShow = function () {\n                        var show = player.isFullscreen();\n                        if (attrs.showIfFullscreen === 'true') {\n                            show = !show;\n                        }\n\n                        if ( show ) {\n                            $animate.removeClass(elm, 'ng-hide');\n                        } else {\n                            $animate.addClass(elm, 'ng-hide');\n                        }\n                    };\n                    hideOrShow();\n                    player.on('fullscreenchange', hideOrShow);\n                });\n            }\n        };\n    }])\n\n    .directive('showIfMuted', ['$animate', function($animate) {\n        return {\n            restrict: 'A',\n            require: '^youtubePlayer',\n            link: function(scope, elm, attrs,youtubePlayerCtrl) {\n                // By default hide\n                $animate.addClass(elm, 'ng-hide');\n                youtubePlayerCtrl.getPlayer().then(function(player){\n                    var hideOrShow = function () {\n                        var show = !player.isMuted();\n                        if (attrs.showIfMuted === 'true') {\n                            show = !show;\n                        }\n\n                        if ( show ) {\n                            $animate.removeClass(elm, 'ng-hide');\n                        } else {\n                            $animate.addClass(elm, 'ng-hide');\n                        }\n                    };\n                    hideOrShow();\n                    scope.$watch(function(){\n                        return player.isMuted();\n                    }, hideOrShow);\n                });\n            }\n        };\n    }])",
                    "snippetHash": "b1ff10d9ab2fccb1da97d8979d0b82b3",
                    "char": {
                        "from": 52,
                        "to": 4400
                    }
                }
            },
            "filehash": "9445f2230f946703c2140afdf8196205"
        },
        "src/service/youtube-marker.js": {
            "version": "0.0.1",
            "refs": {
                "e842f0f3bab6caeaa5f0ef475e6fa4e8": {
                    "loc": [
                        {
                            "file": "docs/src/service/youtube-marker.js.md",
                            "md": "src/service/youtube-marker.js",
                            "line": 12
                        }
                    ],
                    "query": {
                        "text": "if (this.blockFF === true) {"
                    },
                    "refhash": "e842f0f3bab6caeaa5f0ef475e6fa4e8",
                    "directive": "code_todo",
                    "found": true,
                    "snippet": "if (this.blockFF === true) {\n                return true;\n            }",
                    "snippetHash": "98f3d13a8505e583f29377b665bfcd11",
                    "char": {
                        "from": 1451,
                        "to": 1522
                    }
                }
            },
            "filehash": "88b61da59c1f75152a83d38e6184c2ae"
        },
        "src/service/youtube-player.js": {
            "version": "0.0.1",
            "refs": {
                "97476b9fd85463a4d16bbfe49f103420": {
                    "loc": [
                        {
                            "file": "docs/src/service/youtube-player.js.md",
                            "md": "src/service/youtube-player.js",
                            "line": 4
                        }
                    ],
                    "query": {
                        "text": "YoutubePlayer.prototype.fullscreenEnabled"
                    },
                    "refhash": "97476b9fd85463a4d16bbfe49f103420",
                    "directive": "code_todo",
                    "found": true,
                    "snippet": "YoutubePlayer.prototype.fullscreenEnabled",
                    "snippetHash": "b870a32d90488833290edb255698d7ac",
                    "char": {
                        "from": 7386,
                        "to": 7427
                    }
                },
                "ca3eda8b16fec0f9ac0e95e3e0c1a2fa": {
                    "loc": [
                        {
                            "file": "docs/src/service/youtube-player.js.md",
                            "md": "src/service/youtube-player.js",
                            "line": 18
                        }
                    ],
                    "query": {
                        "text": "YoutubePlayer.prototype.isMuted "
                    },
                    "refhash": "ca3eda8b16fec0f9ac0e95e3e0c1a2fa",
                    "directive": "code_warning",
                    "found": true,
                    "snippet": "YoutubePlayer.prototype.isMuted = function () {\n                return this._muted;\n            }",
                    "snippetHash": "753b0692cb7820e966ca6ac1c14df075",
                    "char": {
                        "from": 16127,
                        "to": 16224
                    }
                }
            },
            "filehash": "b23c6102177fb848091f56d1ff9590d6"
        }
    },
    "notFound": []
}