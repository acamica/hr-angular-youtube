{
    "hrMd": {
        "gulpfile.js": {
            "version": "0.0.1",
            "filehash": "28385a88c16a2feedf12562d26218eb1",
            "refs": [
                {
                    "name": false,
                    "src": "gulpfile.js",
                    "ref": {
                        "text": "gulp.task('docs'"
                    },
                    "lineNumber": 6,
                    "refhash": "79d4751c462e2ea35d5868fc56c88d0f",
                    "status": "pending",
                    "directive": "code_warning",
                    "found": true,
                    "snippetHash": "c4cbe3ea869d6dc2f7c0c408e01b1ad3",
                    "char": {
                        "from": 0,
                        "to": 3916
                    }
                }
            ]
        },
        "src/directive/youtube-player.js": {
            "version": "0.0.1",
            "filehash": "2b2042f39685e2379ac6dea79f547c65",
            "refs": [
                {
                    "name": false,
                    "src": "src/directive/youtube-player.js",
                    "ref": {
                        "text": "return [elm[0].clientWidth"
                    },
                    "lineNumber": 6,
                    "refhash": "536bb2825619f079372960dba93f8741",
                    "status": "pending",
                    "directive": "code_warning",
                    "found": true,
                    "snippetHash": "ecfbd79ff2575b2e0a3fa1f342cebaa6",
                    "char": {
                        "from": 6215,
                        "to": 6274
                    }
                }
            ]
        },
        "src/overlay/showDirectives.js": {
            "version": "0.0.1",
            "filehash": "65e1a0ab7b439c605c1d4b0d0aed8bc1",
            "refs": [
                {
                    "name": false,
                    "src": "src/overlay/showDirectives.js",
                    "ref": {
                        "text": "showIfFullscreenEnabled"
                    },
                    "lineNumber": 6,
                    "refhash": "cdd68e3c30326f27eda34e1fff2babea",
                    "status": "pending",
                    "directive": "code_warning",
                    "found": true,
                    "snippetHash": "7601458093ff36f41cb673f21d2c1725",
                    "char": {
                        "from": 1673,
                        "to": 1698
                    }
                }
            ]
        },
        "src/service/youtube-marker.js": {
            "version": "0.0.1",
            "filehash": "acf6e6a76cfee40547240564200587c8",
            "refs": [
                {
                    "name": false,
                    "src": "src/service/youtube-marker.js",
                    "ref": {
                        "text": "if (this.blockFF === true) {"
                    },
                    "lineNumber": 12,
                    "refhash": "e842f0f3bab6caeaa5f0ef475e6fa4e8",
                    "status": "pending",
                    "directive": "code_todo",
                    "found": true,
                    "snippetHash": "98f3d13a8505e583f29377b665bfcd11",
                    "char": {
                        "from": 1354,
                        "to": 1425
                    }
                }
            ]
        },
        "src/service/youtube-player.js": {
            "version": "0.0.1",
            "filehash": "3ff40c9789a186e84d15f4ea9b705d59",
            "refs": [
                {
                    "name": false,
                    "src": "src/service/youtube-player.js",
                    "ref": {
                        "text": "YoutubePlayer.prototype.fullscreenEnabled"
                    },
                    "lineNumber": 4,
                    "refhash": "97476b9fd85463a4d16bbfe49f103420",
                    "status": "pending",
                    "directive": "code_todo",
                    "found": true,
                    "snippetHash": "b870a32d90488833290edb255698d7ac",
                    "char": {
                        "from": 7121,
                        "to": 7162
                    }
                }
            ]
        }
    },
    "hrCode": {
        "gulpfile.js": {
            "version": "0.0.1",
            "refs": {
                "79d4751c462e2ea35d5868fc56c88d0f": {
                    "loc": [
                        {
                            "file": "docs/gulpfile.js.md",
                            "md": "gulpfile.js",
                            "line": 6
                        }
                    ],
                    "query": {
                        "text": "gulp.task('docs'"
                    },
                    "refhash": "79d4751c462e2ea35d5868fc56c88d0f",
                    "directive": "code_warning",
                    "found": true,
                    "snippet": "var gulp      = require('gulp'),\n    concat    = require('gulp-concat'),\n    prefix    = require('gulp-autoprefixer'),\n    uglify    = require('gulp-uglify'),\n    minifycss = require('gulp-minify-css'),\n    rimraf    = require('gulp-rimraf'),\n    rename    = require('gulp-rename');\n\nvar fs = require('fs'),\n    when = require('when');\n\nvar options = null;\n\nfunction loadOptions() {\n    if (options === null) {\n        options = when.promise(function(resolve,reject) {\n            fs.readFile('.env', function(err, file) {\n                if (err) {\n                    return reject(err);\n                }\n                resolve(JSON.parse(file));\n            });\n        });\n    }\n    return options;\n}\n\ngulp.task('process-scripts', function() {\n    gulp.src('./src/**/*.js')\n        .pipe(concat('hr-angular-youtube.js'))\n        .pipe(gulp.dest('./dist/'))\n        .pipe(uglify())\n        .pipe(rename({suffix: '.min'}))\n        .pipe(gulp.dest('./dist/'));\n\n});\n\ngulp.task('process-styles', function() {\n    gulp.src('./assets/**/*.css')\n        .pipe(concat('hr-angular-youtube.css'))\n        .pipe(prefix('last 2 version'))\n        .pipe(gulp.dest('./dist'))\n        .pipe(minifycss())\n        .pipe(rename({suffix: '.min'}))\n        .pipe(gulp.dest('./dist/'));\n});\n\ngulp.task('demo-cp', function(cb) {\n    loadOptions().then(function(options) {\n        gulp.src('./demo/**/*').\n            pipe(gulp.dest(options.pagesDir + '/demo')).\n            on('end', cb);\n    }, function() {\n        console.error('could not load options file');\n    });\n\n});\n\ngulp.task('docs-dist-cp',['process-scripts', 'process-styles'], function(cb) {\n    loadOptions().then(function(options) {\n        gulp.src('./dist/**/*').\n            pipe(gulp.dest(options.pagesDir + '/dist')).\n            on('end', cb);\n    });\n\n});\n\n\ngulp.task('docs-mddoc', function(cb) {\n    loadOptions().then(function(options) {\n        var mddoc  = require('mddoc'),\n            config = mddoc.config;\n\n        // Load the project settings\n        var mddocSettings = config.loadConfig(process.cwd(), {outputDir: options.pagesDir});\n\n        // Run the tool\n        mddocSettings.done(function(settings) {\n            mddoc.verbose(true);\n            mddoc.initialize(settings);\n\n            var steps = [\n                mddoc.readMarkdown,\n                mddoc.readCode,\n                mddoc.saveMetadata,\n                mddoc.replaceReferences,\n                mddoc.generateOutput\n            ];\n\n            mddoc.run(steps).then(function () {\n                cb();\n            }, function(err) {\n                console.error('There was an error running the tool ' + JSON.stringify(err));\n                cb(false);\n            });\n        }, function (err) {\n            console.error('Coundn\\'t read the settings '+ JSON.stringify(err));\n            cb(false);\n        });\n\n    });\n});\n\ngulp.task('docs-clean', function(cb) {\n    loadOptions().then(function(options) {\n        gulp.src(options.pagesDir + '/**/*.*', { read: false })\n        .pipe(rimraf({force:true}))\n        // For some reason I need to add a dest, or no end is triggered\n        .pipe(gulp.dest(options.pagesDir))\n        .on('end', cb);\n    });\n});\n\ngulp.task('build-docs', ['demo-cp', 'docs-dist-cp', 'docs-mddoc']);\n\n// docs-clean removes git\n//gulp.task('docs',['docs-clean'], function(){\ngulp.task('docs', function(){\n    return gulp.start('build-docs');\n});\n\ngulp.task('watch', function() {\n    // This should be process script, but for some reason is not updating :(\n    //    gulp.watch('./src/**/*.js', ['process-scripts']);\n    gulp.watch('./src/**/*.js', ['process-scripts','docs']);\n    gulp.watch('./assets/**/*.css', ['process-styles']);\n    gulp.watch('./demo/**/*', ['docs']);\n    gulp.watch(['./docs/**/*', '!./docs/custom-generator/bower_components/**'], ['docs']);\n});\n\n\ngulp.task('default', ['process-scripts', 'process-styles', 'docs','watch']);",
                    "snippetHash": "c4cbe3ea869d6dc2f7c0c408e01b1ad3",
                    "char": {
                        "from": 0,
                        "to": 3916
                    }
                }
            },
            "filehash": "4f1564c6a9c6dabc0ac69116472608d5"
        },
        "src/directive/youtube-player.js": {
            "version": "0.0.1",
            "refs": {
                "536bb2825619f079372960dba93f8741": {
                    "loc": [
                        {
                            "file": "docs/src/directive/youtube-player.js.md",
                            "md": "src/directive/youtube-player.js",
                            "line": 6
                        }
                    ],
                    "query": {
                        "text": "return [elm[0].clientWidth"
                    },
                    "refhash": "536bb2825619f079372960dba93f8741",
                    "directive": "code_warning",
                    "found": true,
                    "snippet": "return [elm[0].clientWidth, elm[0].clientHeight].join('x');",
                    "snippetHash": "ecfbd79ff2575b2e0a3fa1f342cebaa6",
                    "char": {
                        "from": 6215,
                        "to": 6274
                    }
                }
            },
            "filehash": "04c97e2d71141e22610c211dd3b40f0c"
        },
        "src/overlay/showDirectives.js": {
            "version": "0.0.1",
            "refs": {
                "cdd68e3c30326f27eda34e1fff2babea": {
                    "loc": [
                        {
                            "file": "docs/src/overlay/showDirectives.js.md",
                            "md": "src/overlay/showDirectives.js",
                            "line": 6
                        }
                    ],
                    "query": {
                        "text": "showIfFullscreenEnabled"
                    },
                    "refhash": "cdd68e3c30326f27eda34e1fff2babea",
                    "directive": "code_warning",
                    "found": true,
                    "snippet": "'showIfFullscreenEnabled'",
                    "snippetHash": "7601458093ff36f41cb673f21d2c1725",
                    "char": {
                        "from": 1673,
                        "to": 1698
                    }
                }
            },
            "filehash": "367fb8392582c2de5f2278a12084d337"
        },
        "src/service/youtube-marker.js": {
            "version": "0.0.1",
            "refs": {
                "e842f0f3bab6caeaa5f0ef475e6fa4e8": {
                    "loc": [
                        {
                            "file": "docs/src/service/youtube-marker.js.md",
                            "md": "src/service/youtube-marker.js",
                            "line": 12
                        }
                    ],
                    "query": {
                        "text": "if (this.blockFF === true) {"
                    },
                    "refhash": "e842f0f3bab6caeaa5f0ef475e6fa4e8",
                    "directive": "code_todo",
                    "found": true,
                    "snippet": "if (this.blockFF === true) {\n                return true;\n            }",
                    "snippetHash": "98f3d13a8505e583f29377b665bfcd11",
                    "char": {
                        "from": 1354,
                        "to": 1425
                    }
                }
            },
            "filehash": "a37a5f9f06a59d1763b2cb678ae1d63d"
        },
        "src/service/youtube-player.js": {
            "version": "0.0.1",
            "refs": {
                "97476b9fd85463a4d16bbfe49f103420": {
                    "loc": [
                        {
                            "file": "docs/src/service/youtube-player.js.md",
                            "md": "src/service/youtube-player.js",
                            "line": 4
                        }
                    ],
                    "query": {
                        "text": "YoutubePlayer.prototype.fullscreenEnabled"
                    },
                    "refhash": "97476b9fd85463a4d16bbfe49f103420",
                    "directive": "code_todo",
                    "found": true,
                    "snippet": "YoutubePlayer.prototype.fullscreenEnabled",
                    "snippetHash": "b870a32d90488833290edb255698d7ac",
                    "char": {
                        "from": 7121,
                        "to": 7162
                    }
                }
            },
            "filehash": "6e575027b49042e8f82800ca1d9ab01c"
        }
    },
    "notFound": []
}